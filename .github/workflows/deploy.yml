name: Build and Deploy

on:
  push:
    branches: [ feature/add-docker ]

env:
  REGISTRY: ghcr.io
  IMAGE_BACKEND: ghcr.io/${{ toLower(github.repository) }}/tutor-api:latest
  IMAGE_FRONTEND: ghcr.io/${{ toLower(github.repository) }}/tutor-frontend:latest

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push backend image
        uses: docker/build-push-action@v6
        with:
          context: ./Backend
          file: ./Backend/src/Tutor.Api/Dockerfile
          push: true
          tags: ${{ env.IMAGE_BACKEND }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v6
        with:
          context: ./FrontEnd
          file: ./FrontEnd/Dockerfile
          push: true
          tags: ${{ env.IMAGE_FRONTEND }}
          build-args: |
            VITE_API_BASE_URL=${{ vars.VITE_API_BASE_URL || 'http://144.91.110.197:8080' }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare deployment bundle
        run: |
          mkdir -p .deploy
          cat << 'EOF' > .deploy/.env
          IMAGE_BACKEND=${{ env.IMAGE_BACKEND }}
          IMAGE_FRONTEND=${{ env.IMAGE_FRONTEND }}
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB=${{ secrets.POSTGRES_DB }}
          EOF
          cp Ops/docker-compose.prod.yml .deploy/docker-compose.yml

      - name: Copy files to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          source: ".deploy/*"
          target: "~/apps/tutor"

      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          script_stop: true
          script: |
            set -e
            mkdir -p ~/apps/tutor
            cd ~/apps/tutor
            mv .deploy/docker-compose.yml docker-compose.yml || cp .deploy/docker-compose.yml docker-compose.yml
            mv .deploy/.env .env || cp .deploy/.env .env
            docker compose pull
            docker compose up -d


